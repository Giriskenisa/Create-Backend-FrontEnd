import { Component, OnInit, ChangeDetectorRef } from '@angular/core';
import { Filter } from '../../../../shared/utility/Filter';
import { classNameService } from '../../../../shared/service/classNameService';
import { Router } from '@angular/router';
import { PersonelService } from '../../../../shared/service/PersonelService';
import { Parameter } from '@libs/fw/src';
import { ConfirmationService, DialogService, MenuItem, MessageService, SelectItem } from "primeng/api";
import { ParameterService } from '../../../../shared/utility/ParameterService';
import {NgxSpinnerService} from 'ngx-spinner';
import { MyHelperService } from '../../../../shared/utility/MyHelperService';

@Component({
  selector: 'abt-projects-serverPath-list',
  templateUrl: './serverPath-list.component.html',
  styleUrls: ['./serverPath-list.component.css']
})
export class classNameListComponent implements OnInit {


  constructor(  private service: classNameService,
       private ms:MessageService,
       private router:Router,
       private personelService:PersonelService,
       private cdf: ChangeDetectorRef,
       private confirmationService:ConfirmationService,
       public parameterService: ParameterService,
       private help:MyHelperService,
       private spinner:NgxSpinnerService
    ) {
  }

  filter:Filter;
  objectNameList:any[];
  cparameters:any=[];

  ngOnInit() {
    this.filter = new Filter("serverPath-list", {
    filtreEklenecek
    });

    this.cparameters.push("0");
    this.cparameters.push("2");
    this.getobjectNameList();
  }

  getobjectNameList(){
  this.spinner.show();
    this.service.getList(this.filter.getServiceString()).subscribe((result)=>{
      this.objectNameList = result;
      this.cdf.detectChanges();
      this.spinner.hide();
      this.help.csList(this.objectNameList);
    },(error)=>{
      this.help.showError(error);
    });
  }

gotoList(){
  this.getobjectNameList();
}

showSuccess(baslik: string, mesaj: string) {
 this.help.showToast('success',baslik,mesaj);
}


RowDblClick(id:number){
  this.router.navigate(['/personel/serverPath-edit/' + id]);
}

clear(){
 this.filter.clear();
 this.getobjectNameList();
}


  delete(id:number) {
    this.confirmationService.confirm({
      message: 'Silmek istediğinize emin misiniz?',
      accept : ()=>{
      this.spinner.show();
        this.service.delete(id).subscribe(accept => {
        this.showSuccess("BAŞARILI","Kayıt Silindi..");
           this.router.navigate(['personel/serverPath-list']);
           this.clear();

        },error=>{
            this.help.showError(error)
        });
      }
    })
 
  }

 headers=[basliklar]
export(type,filename='objectName-Listesi'){
  this.spinner.show();
  this.service.exportData(this.filter.getServiceString()).subscribe((result)=>{
    const newArray = result.map(o => {
      return { 
	exportList
        };
    });
    this.exportService.export(type,newArray,this.headers,filename,newArray);
    this.spinner.hide();
  },error=>{this.help.showError(error);})
  
}




}
